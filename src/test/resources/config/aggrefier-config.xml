<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
		   http://www.springframework.org/schema/util 
		   http://www.springframework.org/schema/util/spring-util-2.0.xsd">
		   
	<!-- JHOVE2 framework bean -->
	<bean id="JHOVE2" class="org.jhove2.core.JHOVE2" scope="prototype">
		<property name="developers">
			<list value-type="org.jhove2.core.Agent">
				<ref bean="CDLAgent"/>
				<ref bean="PorticoAgent"/>
				<ref bean="StanfordAgent"/>
			</list>
		</property>
	</bean>
	      
	<!-- Aggrefier module bean -->
	<bean id="Aggrefier" class="org.jhove2.module.identify.AggrefierModule"
	      scope="prototype">
		<property name="developers">
			<list value-type="org.jhove2.core.Agent">
				<ref bean="CDLAgent"/>
				<ref bean="PorticoAgent"/>
				<ref bean="StanfordAgent"/>
			</list>
		</property>
		<property name="recognizers">
			<list value-type="org.jhove2.module.identify.Identifier">
				<ref bean="strictShapeFileRecognizer"/>
				<ref bean="quickenFileRecognizer"/>
			</list>
		</property>
	</bean>
	      
	
	<!-- File set format bean -->
	<bean id="FileSetFormat" class="org.jhove2.core.Format" scope="singleton">
		<constructor-arg type="java.lang.String" value="FileSet"/>
		<constructor-arg ref="FileSetIdentifier"/>
		<constructor-arg type="org.jhove2.core.Format$Type" value="Format"/>
		<constructor-arg type="org.jhove2.core.Format$Ambiguity" value="Unambiguous"/>
	</bean>
				
	<!-- File set identifier bean -->  
	<bean id="FileSetIdentifier" class="org.jhove2.core.I8R" scope="singleton">
		<constructor-arg type="java.lang.String" value="info:jhove2/format/file-set"/>
	</bean>

		
	
	<!-- Shapefile module bean -->
	<bean id="ShapefileModule" class="org.jhove2.module.format.shapefile.ShapefileModule"
	      scope="prototype">
	    <constructor-arg ref="ShapefileFormat"/>
	    <property name="developer" ref="StanfordAgent"/>
	</bean>
      
    <!-- Shapefile format bean -->
	<bean id="ShapefileFormat" class="org.jhove2.core.Format" scope="singleton">
		<constructor-arg type="java.lang.String" value="Shapefile"/>
		<constructor-arg ref="ShapefileIdentifier"/>
		<constructor-arg type="org.jhove2.core.Format$Type" value="Format"/>
		<constructor-arg type="org.jhove2.core.Format$Ambiguity" value="Unambiguous"/>
	</bean>
		
	<!-- Shapefile identifier bean -->  
	<bean id="ShapefileIdentifier" class="org.jhove2.core.I8R" scope="singleton">
		<constructor-arg type="java.lang.String" value="info:jhove2/format/shapefile"/>
	</bean>
			
	<!-- Strict Shapefile recognizer bean 
	     Must have all 3 required files; does NOT accept files with unrecognized extensions -->
	<bean id="strictShapeFileRecognizer" class="org.jhove2.module.identify.GlobPathRecognizer"
	 scope="prototype">
	 	<property name="developers">
			<list value-type="org.jhove2.core.Agent">
				<ref bean="CDLAgent"/>
				<ref bean="PorticoAgent"/>
				<ref bean="StanfordAgent"/>
			</list>
		</property>
	 	<property name="format" ref="ShapefileFormat"/>
	 	<property name="fileGroupingExpr" value="(.*[\\/]\w+).((?i:shp\.)?\w{3})"/>
	 	<property name="mustHaveExpr" value="^((?i:shp)|(?i:shx)|(?i:dbf))$"/>
	 	<property name="mayHaveExpr" 
	 	          value="^((?i:shp.xml)|(?i:prj)|(?i:sbn)|(?i:sbx)|(?i:atx)|(?i:qix)|(?i:fix)|(?i:grx))$"/>
	 	<property name="fileGroupingCaptureGroupIndex" value="1" />
	 	<property name="mustHaveCaptureGroupIndex" value="2"/>
	 	<property name="mayHaveCaptureGroupIndex" value="2"/>
	 	<property name="minMustHavesToIdentify" value="3"/>
	  	<property name="includeUnmatchedFromGroup" value="false"/>
	</bean>
	

	<!-- CDL agent bean -->
	<bean id="CDLAgent" class="org.jhove2.core.Agent" scope="singleton">
		<constructor-arg type="java.lang.String" value="California Digital Library"/>
		<constructor-arg type="org.jhove2.core.Agent$Type" value="Corporate"/>
		<property name="URI" value="http://www.cdlib.org/"/>
	</bean>
		
	<!-- Portico agent bean -->
	<bean id="PorticoAgent" class="org.jhove2.core.Agent" scope="singleton">
		<constructor-arg type="java.lang.String" value="Portico"/>
		<constructor-arg type="org.jhove2.core.Agent$Type" value="Corporate"/>
		<property name="URI" value="http://www.portico.org/"/>
	</bean>
		
	<!-- Stanford agent bean -->
	<bean id="StanfordAgent" class="org.jhove2.core.Agent" scope="singleton">
		<constructor-arg type="java.lang.String" value="Stanford University"/>
		<constructor-arg type="org.jhove2.core.Agent$Type" value="Corporate"/>
		<property name="URI" value="http://www.stanford.edu/"/>
	</bean>
	
	<!--  JUNIT test parameter Beans -->
	
	<!--  you will need to edit the testDirPath property to run on your machine -->
	<bean id="shapeDirPath" class="java.lang.String" >
	<constructor-arg type="java.lang.String" 
	        value="C:\portico\jhove2\svn-repository\prototype\jhove2\trunk\src\test\resources\examples\shapefiles\"/>
	</bean>
	
	<bean id="shapeFileList" class="java.util.ArrayList">
		<constructor-arg type="java.util.Collection">
			<list>
				<value>abc.dbf</value>
				<value>abc.shp</value>
				<value>abc.shp.xml</value>
				<value>abc.shx</value>
				<value>abc.zzz</value>
				<value>def.dbf</value>
				<value>def.shp</value>
				<value>def.shx</value>
				<value>ghi.dbf</value>
				<value>ghi.shp</value>
				<value>ghi.shp.xml</value>
				<value>something-else.txt</value> <!--  will not be grouped; does not match grouping expression -->
			</list>
		</constructor-arg>
	</bean>
	
	
	<bean id="shapeStrictKeyCountMap" class="java.util.HashMap">
		<constructor-arg type="java.util.Map">
			<map>
				<entry key="abc" value="4"/>
				<entry key="def" value="3"/>
			</map>
		</constructor-arg>
	</bean>
	
<!-- Quicken format bean -->
	<bean id="QuickenFormat" class="org.jhove2.core.Format" scope="singleton">
		<constructor-arg type="java.lang.String" value="Quicken"/>
		<constructor-arg ref="QuickenIdentifier"/>
		<constructor-arg type="org.jhove2.core.Format$Type" value="Format"/>
		<constructor-arg type="org.jhove2.core.Format$Ambiguity" value="Unambiguous"/>
	</bean>
	
		<!-- Quicken identifier bean -->  
	<bean id="QuickenIdentifier" class="org.jhove2.core.I8R" scope="singleton">
		<constructor-arg type="java.lang.String" value="info:jhove2/format/shapefile"/>
	</bean>
	
		<!-- Quicken recognizer bean 
	     Must have all 5 required files; does NOT accept files with unrecognized extensions -->
	<bean id="quickenFileRecognizer" class="org.jhove2.module.identify.GlobPathRecognizer"
	 scope="prototype">
	 	<property name="developers">
			<list value-type="org.jhove2.core.Agent">
				<ref bean="CDLAgent"/>
				<ref bean="PorticoAgent"/>
				<ref bean="StanfordAgent"/>
			</list>
		</property>
	 	<property name="format" ref="QuickenFormat"/>
	 	<property name="fileGroupingExpr" value="(.*[\\/]\w+).(\w{3})"/>
	 	<property name="mustHaveExpr" value="^((?i:idx)|(?i:qel)|(?i:qph)|(?i:qdf)|(?i:ptx))$"/>
	 	<property name="fileGroupingCaptureGroupIndex" value="1" />
	 	<property name="mustHaveCaptureGroupIndex" value="2"/>
	 	<property name="minMustHavesToIdentify" value="5"/>
	  	<property name="includeUnmatchedFromGroup" value="false"/>
	</bean>
	
		<bean id="quickenDirPath" class="java.lang.String" >
	<constructor-arg type="java.lang.String" 
	        value="C:\portico\jhove2\svn-repository\prototype\jhove2\trunk\src\test\resources\examples\quicken\"/>
	</bean>
	
		<bean id="quickenFileList" class="java.util.ArrayList">
		<constructor-arg type="java.util.Collection">
			<list>
				<value>finances.idx</value>
				<value>finances.idx.txt</value>
				<value>finances.ptx</value>
				<value>finances.qdf</value>
				<value>finances.qel</value>
				<value>finances.qph</value>
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="quickenStrictKeyCountMap" class="java.util.HashMap">
		<constructor-arg type="java.util.Map">
			<map>
				<entry key="finances" value="5"/>
			</map>
		</constructor-arg>
	</bean>
</beans>
