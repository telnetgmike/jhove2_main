<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
		   http://www.springframework.org/schema/util 
		   http://www.springframework.org/schema/util/spring-util-2.0.xsd">
		   
	<bean id="testSgmlModule" class="org.jhove2.module.format.sgml.SgmlModule"
	      scope="prototype">
	    <constructor-arg ref="testSgmlFormat"/>
        <property name="wrappedProduct" ref="testOpenSgml"/>
        <property name="sgmlParser" ref="testOpenSpWrapper"/>     
	</bean>
	
	<bean id="testOpenSpWrapper" class="org.jhove2.module.format.sgml.OpenSpWrapper">
        <property name="processHandler" ref="testExternalProcessHandler"/>
        <property name="onsgmlsPath" value="/usr/bin/onsgmls"/>
        <property name="filepathFilter" ref="testOpenSpFilepathFilter"/>
        <property name="sgmlnormPath" value="/usr/bin/sgmlnorm"/>
	</bean>
   
   <bean id="testExternalProcessHandler" class="org.jhove2.util.externalprocess.ForkShellHandler" >
		<property name="shellEnv" value="c:\cygwin\bin\bash"/>
		<property name="shellParms" value="-c"/>
		<property name="shouldQuoteCommand" value="true"/>
	</bean>
	
	<bean id="testOpenSpFilepathFilter" 
			class="org.jhove2.util.externalprocess.FileSeparatorFilter">
    </bean>
	
   <!-- OpenSGML wrapped product bean -->
   <bean id="testOpenSgml" class="org.jhove2.core.WrappedProduct" scope="singleton" >
   		<property name="authority" value="Open Jade:  http://openjade.sourceforge.net/"/>
   		<property name="constraints" value="Executable MUST be on runtime path"/>
   		<property name="developers" value="James Clark, Henry Thompson, Cees A. de Groot, Matthias Clasen, Peter Newcomb"/>
   		<property name="environments" value="Unix Windows Macintosh"/>
   		<property name="languages" value="C++"/>
   		<property name="name" value="OpenSP"/>
   		<property name="note" value="This package is a collection of SGML/XML tools called OpenSP. It is a fork from James Clark's SP suite. These tools are used to parse, validate, and normalize SGML and XML files"/>
   		<property name="openSource" value="true"/>
   		<property name="releaseDate" value="2005-12-23"/>
   		<!--  
   		<property name="rightsStatement" value="Copyright (c) 1994, 1995, 1996, 1997, 1998 James Clark Permission is hereby granted, free of charge, to any person obtaininga copy of this software and associated documentation files (the'Software'), to deal in the Software without restriction, includingwithout limitation the rights to use, copy, modify, merge, publish,distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL JAMES CLARK BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  Except as contained in this notice, the name of James Clark shall not be used in advertising or otherwise to promote the sale, use or other dealings in this Software without prior written authorization from James Clark."/>
   		-->
   		<property name="version" value="1.5.2"/>
   </bean>
     
	<!-- SGML format bean -->
	<bean id="testSgmlFormat" class="org.jhove2.core.format.Format" scope="singleton">
		<constructor-arg type="java.lang.String" value="SGML"/>
		<constructor-arg ref="testSgmlIdentifier"/>
		<constructor-arg type="org.jhove2.core.format.Format$Type" value="Format"/>
		<constructor-arg type="org.jhove2.core.format.Format$Ambiguity" value="Unambiguous"/>
		<property name="aliasIdentifiers">
			<set value-type="org.jhove2.core.I8R">
				<ref bean="testPUIDSgml"/>
				<ref bean="testSgmlMIMEType"/>
				<ref bean="testSgmlRFC1874"/>
				<ref bean="testSgmlISO8879"/>
			</set>
		</property>
		<property name="aliasNames">
			<set>
				<value>Standard Generalized Markup Language</value>
			</set>
		</property>
	</bean>

	<!-- SGML identifier bean -->  
	<bean id="testSgmlIdentifier" class="org.jhove2.core.I8R" scope="singleton">
		<constructor-arg type="java.lang.String" value="http://jhove2.org/terms/format/sgml"/>
	</bean>
	<!-- SGML PUID aliasIdentifier bean -->
	<bean id="testPUIDSgml" class="org.jhove2.core.I8R" scope="singleton">
	    <constructor-arg type="java.lang.String" value="x-fmt/195"/>
	    <constructor-arg type="org.jhove2.core.I8R$Namespace" value="PUID"/>
	</bean>
	<!-- SGML MIME aliasIdentifier bean -->
	<bean id="testSgmlMIMEType" class="org.jhove2.core.I8R" scope="singleton">
	    <constructor-arg type="java.lang.String" value="application/sgml"/>
	    <constructor-arg type="org.jhove2.core.I8R$Namespace" value="MIME"/>
	</bean>
	<!--  SGML RFC 1874 aliasIdentifier bean -->
	<bean id="testSgmlRFC1874" class="org.jhove2.core.I8R" scope="singleton">
		<constructor-arg type="java.lang.String" value="RFC 1874"/>
		<constructor-arg type="org.jhove2.core.I8R$Namespace" value="RFC"/>
	</bean>
		<!--  SGML ISO 8879 aliasIdentifier bean -->
	<bean id="testSgmlISO8879" class="org.jhove2.core.I8R" scope="singleton">
		<constructor-arg type="java.lang.String" value="ISO 8879:1986"/>
		<constructor-arg type="org.jhove2.core.I8R$Namespace" value="ISO"/>
	</bean>
	
	<bean id="validEsisFileName" class="java.lang.String" >
		<constructor-arg type="java.lang.String" 
	        value="esisfiles/valid.01.esis"/>
	</bean>  
	
	<bean id="validEsisFileName02" class="java.lang.String" >
		<constructor-arg type="java.lang.String" 
	        value="esisfiles/valid.02.esis"/>
	</bean>
	
		<bean id="validEsisFileName03" class="java.lang.String" >
		<constructor-arg type="java.lang.String" 
	        value="esisfiles/valid.03.esis"/>
	</bean>
	
	<bean id="invalidEsisFileName" class="java.lang.String" >
		<constructor-arg type="java.lang.String" 
	        value="esisfiles/nonconform.01.esis"/>
	</bean> 
		<bean id="emptyEsisFileName" class="java.lang.String" >
		<constructor-arg type="java.lang.String" 
	        value="esisfiles/empty.esis"/>
	</bean> 

	<bean id="unrecognizedEsisFileName" class="java.lang.String" >
		<constructor-arg type="java.lang.String" 
	        value="esisfiles/unrecognized_command.esis"/>
	</bean>
	
	<bean id="catalogFile" class="java.lang.String">
		<constructor-arg type="java.lang.String" 
	        value="/catalog"/>
	</bean>
	
	<bean id="validSgmlFile" class="java.lang.String">
		<constructor-arg type="java.lang.String" 
	        value="sgmlfiles/html4_0_spec.htm"/>
	</bean>
	
	<bean id="invalidSgmlFile" class="java.lang.String">
		<constructor-arg type="java.lang.String" 
	        value="sgmlfiles/invalid_html4_0_spec.htm"/>
	</bean>
	
	<bean id="normOutNoDoctype" class="java.lang.String">
			<constructor-arg type="java.lang.String" 
	        value="normfiles/nodoctype.gml.norm.out"/>
	</bean>
	
	<bean id="normOutPubid" class="java.lang.String">
			<constructor-arg type="java.lang.String" 
	        value="normfiles/pubid.sgm.norm.out"/>
	</bean>
	
	<bean id="normOutSysid" class="java.lang.String">
			<constructor-arg type="java.lang.String" 
	        value="normfiles/sysid.sgm.norm.out"/>
	</bean>
	
	
	<bean id="normOutZero" class="java.lang.String">
			<constructor-arg type="java.lang.String" 
	        value="normfiles/zerolength.sgm.norm.out"/>
	</bean>
	
	<bean id="conformButWarn" class="java.lang.String">
			<constructor-arg type="java.lang.String" 
	        value="esiserrfiles/conformButWarn.esis.err"/>
	</bean>
	
	<bean id="conformNoErr" class="java.lang.String">
			<constructor-arg type="java.lang.String" 
	        value="esiserrfiles/conformnoerr.esis.err"/>
	</bean>
	
	<bean id="noDoctype" class="java.lang.String">
			<constructor-arg type="java.lang.String" 
	        value="esiserrfiles/nodoctype.esis.err"/>
	</bean>
	
	<bean id="spaceBeforeDoctype" class="java.lang.String">
			<constructor-arg type="java.lang.String" 
	        value="esiserrfiles/spacebeforedocytpe.esis.err"/>
	</bean>
	
	<bean id="unmatchedPubid" class="java.lang.String">
			<constructor-arg type="java.lang.String" 
	        value="esiserrfiles/unmatchedpubid.esis.err"/>
	</bean>
	
	<bean id="unmatchedSysid" class="java.lang.String">
			<constructor-arg type="java.lang.String" 
	        value="esiserrfiles/unmatchedSysid.esis.err"/>
	</bean>
						
</beans>
